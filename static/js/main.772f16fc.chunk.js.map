{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/services.jsx","components/gallery.jsx","components/testimonials.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","bg","zIndex","position","top","data","title","paragraph","Features","map","d","i","icon","text","About","src","alt","Why","Why2","Services","name","Gallery","useState","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","thumb","images","obj","replace","openImageViewer","useCallback","index","onClick","backgroundStyle","currentIndex","onClose","Testimonials","img","Footer","rel","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.772f16fc.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n            My Landing Page\r\n          </a>{' '}\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#features' className='page-scroll'>\r\n                Features\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#about' className='page-scroll'>\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#services' className='page-scroll'>\r\n                Services\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#portfolio' className='page-scroll'>\r\n                Gallery\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#testimonials' className='page-scroll'>\r\n                Testimonials\r\n              </a>\r\n            </li>\r\n            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import ParticlesBg from \"particles-bg\";\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <ParticlesBg type=\"circle\" bg={{zIndex: 0, position:\"absolute\", top:0}} />\r\n        <div className='overlay'>\r\n          <div className='container'>\r\n          \r\n            <div className='row'>\r\n              <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                <h1>\r\n                  {props.data ? props.data.title : 'Loading'}\r\n                  <span></span>\r\n                </h1>\r\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                <a\r\n                  href='#features'\r\n                  className='btn btn-custom btn-lg page-scroll'\r\n                >\r\n                  Learn More\r\n                </a>{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","export const Features = (props) => {\r\n  return (\r\n    <div id='features' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n          <h2>Features</h2>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\r\n                  {' '}\r\n                  <i className={d.icon}></i>\r\n                  <h3>{d.title}</h3>\r\n                  <p>{d.text}</p>\r\n                </div>\r\n              ))\r\n            : 'Loading...'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const About = (props) => {\r\n  return (\r\n    <div id='about'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            {' '}\r\n            <img src='img/about.jpg' className='img-responsive' alt='' />{' '}\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <div className='about-text'>\r\n              <h2>About Us</h2>\r\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\r\n              <h3>Why Choose Us?</h3>\r\n              <div className='list-style'>\r\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why.map((d, i) => (\r\n                          <li key={`${d}-${i}`}>{d}</li>\r\n                        ))\r\n                      : 'loading'}\r\n                  </ul>\r\n                </div>\r\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why2.map((d, i) => (\r\n                          <li key={`${d}-${i}`}> {d}</li>\r\n                        ))\r\n                      : 'loading'}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Services = (props) => {\r\n  return (\r\n    <div id='services' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>Our Services</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed\r\n            dapibus leonec.\r\n          </p>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-4'>\r\n                  {' '}\r\n                  <i className={d.icon}></i>\r\n                  <div className='service-desc'>\r\n                    <h3>{d.name}</h3>\r\n                    <p>{d.text}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport ImageViewer from \"react-simple-image-viewer\";\r\n\r\nexport const Gallery = props => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\r\n\r\n  const data = [\r\n    { thumb: \"img/portfolio/01-small.jpg\", title: \"Lorem Ipsum1\" },\r\n    { thumb: \"img/portfolio/02-small.jpg\", title: \"Lorem Ipsum2\" },\r\n    { thumb: \"img/portfolio/03-small.jpg\", title: \"Lorem Ipsum3\" },\r\n    { thumb: \"img/portfolio/04-small.jpg\", title: \"Lorem Ipsum4\" },\r\n    { thumb: \"img/portfolio/05-small.jpg\", title: \"Lorem Ipsum5\" },\r\n    { thumb: \"img/portfolio/06-small.jpg\", title: \"Lorem Ipsum6\" },\r\n    { thumb: \"img/portfolio/07-small.jpg\", title: \"Lorem Ipsum7\" },\r\n    { thumb: \"img/portfolio/08-small.jpg\", title: \"Lorem Ipsum8\" },\r\n    { thumb: \"img/portfolio/09-small.jpg\", title: \"Lorem Ipsum9\" }\r\n  ];\r\n\r\n  const images = data.map(obj => obj.thumb.replace(\"-small\", \"-large\"));\r\n\r\n  const openImageViewer = useCallback(index => {\r\n    setCurrentImage(index);\r\n    setIsViewerOpen(true);\r\n  }, []);\r\n\r\n  const closeImageViewer = () => {\r\n    setCurrentImage(0);\r\n    setIsViewerOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"portfolio\" className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <h2>Gallery</h2>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed dapibus leonec.</p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"portfolio-items\">\r\n            {data.map(({ title, thumb }, index) => (\r\n              <div key={index} onClick={() => openImageViewer(index)} className=\"col-sm-6 col-md-4 col-lg-4\">\r\n                <div className=\"portfolio-item cursor\">\r\n                  <div className=\"hover-bg\">\r\n                    <div className=\"hover-text\">\r\n                      <h4>{title}</h4>\r\n                    </div>\r\n                    <img src={thumb} className=\"img-responsive\" alt=\"Project Title\" />{\" \"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {isViewerOpen && (\r\n            <ImageViewer\r\n              src={images}\r\n              backgroundStyle={{ zIndex: 99999 }}\r\n              currentIndex={currentImage}\r\n              onClose={closeImageViewer}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const Testimonials = (props) => {\r\n  return (\r\n    <div id='testimonials'>\r\n      <div className='container'>\r\n        <div className='section-title text-center'>\r\n          <h2>What our clients say</h2>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-4'>\r\n                  <div className='testimonial'>\r\n                    <div className='testimonial-image'>\r\n                      {' '}\r\n                      <img src={d.img} alt='' />{' '}\r\n                    </div>\r\n                    <div className='testimonial-content'>\r\n                      <p>\"{d.text}\"</p>\r\n                      <div className='testimonial-meta'> - {d.name} </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Footer = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <div id='footer'>\r\n        <div className='container text-center'>\r\n          <p>\r\n            &copy; 2020 Issaaf Kattan React Land Page Template. Design by{' '}\r\n            <a href='http://www.templatewire.com' rel='nofollow'>\r\n              TemplateWire\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Navigation } from './components/navigation'\r\nimport { Header } from './components/header'\r\nimport { Features } from './components/features'\r\nimport { About } from './components/about'\r\nimport { Services } from './components/services'\r\nimport { Gallery } from './components/gallery'\r\nimport { Testimonials } from './components/testimonials'\r\nimport { Footer } from './components/footer'\r\nimport JsonData from './data/data.json'\r\nimport SmoothScroll from 'smooth-scroll'\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n})\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({})\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n      <Features data={landingPageData.Features} />\r\n      <About data={landingPageData.About} />\r\n      <Services data={landingPageData.Services} />\r\n      <Gallery />\r\n      <Testimonials data={landingPageData.Testimonials} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}